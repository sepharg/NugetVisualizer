@model DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
}


<style type="text/css">
    
    html, body {
        height: 100%;
    }
    body {
        font-family: 'Source Sans Pro', sans-serif;
        color: #666;
    }
    /* button */
    .button {
        cursor: pointer;
        text-decoration: none;
        font-size: 0.6em;
        font-weight: 400;
        text-transform: uppercase;
        display: inline-block;
        padding: 4px 6px;
        margin: 0 10px;
        position: relative;
        background: #ccc;
        color: #fff;
        box-shadow: 0 0 2px rgba(0,0,0,0.1);
        background: rgb(190,190,190); /* Old browsers */
        background: -moz-linear-gradient(top, rgba(190,190,190,1) 0%, rgba(170,170,170,1) 100%); /* FF3.6+ */
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(190,190,190,1)), color-stop(100%,rgba(170,170,170,1))); /* Chrome,Safari4+ */
        background: -webkit-linear-gradient(top, rgba(190,190,190,1) 0%,rgba(170,170,170,1) 100%); /* Chrome10+,Safari5.1+ */
        background: -o-linear-gradient(top, rgba(190,190,190,1) 0%,rgba(170,170,170,1) 100%); /* Opera 11.10+ */
        background: -ms-linear-gradient(top, rgba(190,190,190,1) 0%,rgba(170,170,170,1) 100%); /* IE10+ */
        background: linear-gradient(to bottom, rgba(190,190,190,1) 0%,rgba(170,170,170,1) 100%); /* W3C */
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#bebebe', endColorstr='#aaaaaa',GradientType=0 ); /* IE6-9 */
    }
    .button:hover {
        background: #637b85;
    }
    /* Header styles */
    header {
        text-align: center;
        background: #637b85;
        color: #fff;
        margin-bottom: 40px;
    }
    header span {
        font-weight: 200;
    }
    header .button {
        font-size: 0.2em;
        top: -6px;
    }
 
    /* various containers */
    .container {
        width: 200px;
        margin: 0 auto;
    }
    .canvas-container {
        min-height: 300px;
        max-height: 600px;
        position: relative;
    }
    .widget {
        position: relative;
        margin-bottom: 80px;
        background: #efefef;
        padding: 12px;
        margin-bottom: 30px;
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
    }
    .widget p {
        margin-top: 0;
        text-align: center;
    }
    .widget h3 {
        margin: -12px 0 0px -0px;
        padding: 12px;
        width: 100%;
        text-align: center;
        color: #627b86;
        line-height: 2em;
        background: #d0dde3;
    }
    .chart-legend {
        margin: -12px -12px 0px -12px
    }



     @@media only screen and (min-width:300px){
         .container {
             width: 300px;
             margin: 0 auto;
         }
     }
 
    @@media only screen and (min-width:600px){
        .container {
            width: 580px;
            margin: 0 auto;
        }
    }
 
    @@media only screen and (min-width:960px){
        .container {
            width: 940px;
        }
        .half {
            float: left;
            width: 50%;
            margin-left: 1.5%;
            margin-right: 1.5%;
        }
        .half:first-child {
            margin-left: 0;
        }
        .half:last-child {
            margin-right: 0;
            margin-left: 1.5%;
            width: 47%;
        }
    }
    @@media only screen and (min-width:1140px){
        .container {
            width: 1120px;
        }
    }
    @@media only screen and (min-width:1360px){
        .container {
            width: 1300px;
        }
    }
</style>

<div class="wrapper">
    <header>
        <div class="container clearfix">
            <h1>Nuget Packages Overview</h1>
        </div>
    </header>
    <div class="clearfix">
        <div class="half widget">
            <div id="leastUsedPackagesContainer">
                @{Html.RenderPartial("Widgets/UsedPackages", Model.LeastUsedPackagesViewModel);}
            </div>
            <div style="text-align: center; padding-top: 10px;">
                <form asp-for="maxToRetrieve" asp-controller="Dashboard" asp-action="LeastUsed" method="post">
                    @Html.DropDownListFor(model => model.LeastUsedPackagesViewModel.MaxToRetrieve, new SelectList(new List<SelectListItem>() {  new SelectListItem() {  Text = "5", Value = "5"} , new SelectListItem() { Text = "10", Value = "10" }, new SelectListItem() { Text = "15", Value = "15" } }, "Text", "Value"), new { id = "ddlLeastUsedMaxToRetrieve" })
                </form>
            </div>
        </div>
        <div class="half widget">
            <div id="mostUsedPackagesContainer">
                @{Html.RenderPartial("Widgets/UsedPackages", Model.MostUsedPackagesViewModel);}
            </div>
            <div style="text-align: center; padding-top: 10px;">
                <form asp-for="maxToRetrieve" asp-controller="Dashboard" asp-action="MostUsed" method="post">
                    @Html.DropDownListFor(model => model.MostUsedPackagesViewModel.MaxToRetrieve, new SelectList(new List<SelectListItem>() { new SelectListItem() { Text = "5", Value = "5" }, new SelectListItem() { Text = "10", Value = "10" }, new SelectListItem() { Text = "15", Value = "15" } }, "Text", "Value"), new { id = "ddlMostUsedMaxToRetrieve" })
                </form>
            </div>
        </div>
    </div>
    <div class="clearfix">
        <div class="half widget">
            <div class="chart-legend">
                <h3>Another Graph</h3>
            </div>
            <div class="canvas-container">
            </div>
        </div>
        <div class="half widget">
            <div class="chart-legend">
                <h3>Another Graph</h3>
            </div>
            <div class="canvas-container">
            </div>
        </div>
    </div>
    <div class="push"></div>
</div>
<footer>
</footer>

<script type="text/javascript">  
    $(document).ready(function () {
        $("#ddlLeastUsedMaxToRetrieve").change(function () {
            var maxToRetrieve = $("#ddlLeastUsedMaxToRetrieve").val();
            $("#leastUsedPackagesContainer").load('@(Url.Action("LeastUsed", "Dashboard",null))?maxToRetrieve=' + maxToRetrieve);
        });
    $("#ddlMostUsedMaxToRetrieve").change(function () {
        var maxToRetrieve = $("#ddlMostUsedMaxToRetrieve").val();
    $("#mostUsedPackagesContainer").load('@(Url.Action("MostUsed", "Dashboard",null))?maxToRetrieve=' + maxToRetrieve);
        });     
    });
</script> 